//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Assets.ECS.Components.GameObjectTypeComponent gameObjectType { get { return (Assets.ECS.Components.GameObjectTypeComponent)GetComponent(GameComponentsLookup.GameObjectType); } }
    public bool hasGameObjectType { get { return HasComponent(GameComponentsLookup.GameObjectType); } }

    public void AddGameObjectType(Assets.ECS.Components.GameObjectType newValue) {
        var index = GameComponentsLookup.GameObjectType;
        var component = (Assets.ECS.Components.GameObjectTypeComponent)CreateComponent(index, typeof(Assets.ECS.Components.GameObjectTypeComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceGameObjectType(Assets.ECS.Components.GameObjectType newValue) {
        var index = GameComponentsLookup.GameObjectType;
        var component = (Assets.ECS.Components.GameObjectTypeComponent)CreateComponent(index, typeof(Assets.ECS.Components.GameObjectTypeComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveGameObjectType() {
        RemoveComponent(GameComponentsLookup.GameObjectType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameObjectType;

    public static Entitas.IMatcher<GameEntity> GameObjectType {
        get {
            if (_matcherGameObjectType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameObjectType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameObjectType = matcher;
            }

            return _matcherGameObjectType;
        }
    }
}
